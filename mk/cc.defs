
ifeq ($(OS),macos)
	ifeq ($(GCC),1)
		REAL_GCC:=$(shell gcc --version | grep clang &> /dev/null; echo $$?)
		ifeq ($(REAL_GCC),0)
			override GCC=
			CLANG=1
		else
			GCC=1
		endif
	else
		CLANG=1
	endif
endif

ifneq ($(CLANG),1)
GCC=1
endif

ifeq ($(origin CC),default) # CC not explicitly overridden
	ifeq ($(GCC),1)
		override CC=gcc
		override CXX=g++
	else ifeq ($(CLANG),1)
		override CC=clang
		override CXX=clang++
	endif
endif

export CC
export CXX

#----------------------------------------------------------------------------------------------

define CC_FLAGS.ccdeps
	-MMD
	-MF $(@:.o=.d)
endef

define CC_FLAGS.common
	-fPIC

	$(CC_FLAGS.opt)
	$(CC_FLAGS.warnings)
	$(CC_FLAGS.debug)
	$(CC_FLAGS.coverage)
	$(CC_FLAGS.$(OS))
endef

ifneq ($(wildcard $(SRCDIR)/common.h),)
CC_FLAGS.common += -include $(SRCDIR)/common.h
endif

ifeq ($(PEDANTIC),1)
CC_FLAGS.warnings += -Wpedantic
endif

CC_FLAGS.defs=$(foreach d,$(call flatten,$(CC_DEFS)),-D$(d))
CC_FLAGS.includes=$(foreach d,$(call flatten,$(CC_INCLUDES)),-I$(d))

CC_FLAGS.debug += -g -ggdb
ifeq ($(DEBUG),1)
	CC_FLAGS.opt += -O0
	CC_FLAGS.debug += -fno-omit-frame-pointer -D_DEBUG
else
	ifeq ($(PROFILE),1)
		CC_FLAGS.opt += -O2
	else
		CC_FLAGS.opt += -O3
	endif
endif

define _CC_C_FLAGS
	-fcommon
endef
CC_C_FLAGS=$(call flatten,$(_CC_C_FLAGS))

define _CC_CXX_FLAGS
endef
CC_CXX_FLAGS=$(call flatten,$(_CC_CXX_FLAGS))

define _CC_FLAGS
	$(CC_FLAGS.ccdeps)
	$(CC_FLAGS.common)
	$(CC_FLAGS.defs)
	$(CC_FLAGS.includes)
endef
CC_FLAGS=$(call flatten,$(_CC_FLAGS))

export CMAKE_CC_FLAGS=$(call flatten,$(CC_FLAGS.common))
export CMAKE_CC_C_FLAGS=$(CC_C_FLAGS)
export CMAKE_CC_CXX_FLAGS=$(CC_CXX_FLAGS)

#----------------------------------------------------------------------------------------------

define _LD_FLAGS
	$(LD_FLAGS.common)
	$(LD_FLAGS.$(OS))
	$(LD_FLAGS.coverage)
endef
LD_FLAGS=$(call flatten,$(_LD_FLAGS))

define _SO_LD_FLAGS
	$(SO_LD_FLAGS.common)
	$(SO_LD_FLAGS.$(OS))
endef
SO_LD_FLAGS=$(call flatten,$(_SO_LD_FLAGS))

export CMAKE_LD_FLAGS=$(LD_FLAGS)
export CMAKE_SO_LD_FLAGS=$(SO_LD_FLAGS)

#----------------------------------------------------------------------------------------------

include $(MK)/openmp.defs
